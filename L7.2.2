/*
 *2) Расстояние Хэмминга между двумя целыми числами - это число
 *позиций, в которых биты различаются .
 *Для примера:
 * 117 = 0 1 1 1 0 1 0 1
 * 17 = 0 0 0 1 0 0 0 1
 *-----------------------------------
 *H = 0+1+1+0+0+1+0+0 = 3 - расстояние Хэмминга между (117,17)
 *Даны два положительных целых числа (N, M) в десятичном виде. Вам
 *необходимо подсчитать расстояние Хэмминга между этими двумя
 *числами.
 */

package com.gmail.wildekatertz;

import java.util.Arrays;
import java.util.Scanner;
import java.lang.Math;

public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.println("Введите число в бинарном формате");

		/*
		 * первое число
		 */
		String binarNumeric1 = sc.nextLine();

		binarNumeric1 = binarNumeric1.replace(" ", "");

		boolean checkNumeric = true;
		char[] charNumeric1 = binarNumeric1.toCharArray();
		int[] intNumeric1 = new int[binarNumeric1.length()];

		for (int i = 0; i < charNumeric1.length; i++) {
			if ((charNumeric1[i] == '0') || (charNumeric1[i] == '1')) {
				intNumeric1[i] = Character.getNumericValue(charNumeric1[i]);
			} else {
				checkNumeric = false;
				break;
			}
		}

		int nnnumeric1 = 0;

		if (checkNumeric) {
			for (int i = 0; i < intNumeric1.length; i++) {
				nnnumeric1 = nnnumeric1 + intNumeric1[i] * ((int) Math.pow(2, intNumeric1.length - 1 - i));
			}
			// System.out.println(binarNumeric1 + " -> " + nnnumeric1);
		} else {
			System.out.println("Введённое значение не является числом в бинарном формате");
		}
		/*
		 * второе число
		 */
		String binarNumeric2 = sc.nextLine();

		binarNumeric2 = binarNumeric2.replace(" ", "");

		checkNumeric = true;
		char[] charNumeric2 = binarNumeric2.toCharArray();
		int[] intNumeric2 = new int[binarNumeric2.length()];

		for (int i = 0; i < charNumeric2.length; i++) {
			if ((charNumeric2[i] == '0') || (charNumeric2[i] == '1')) {
				intNumeric2[i] = Character.getNumericValue(charNumeric2[i]);
			} else {
				checkNumeric = false;
				break;
			}
		}

		int nnnumeric2 = 0;

		if (checkNumeric) {
			for (int i = 0; i < intNumeric2.length; i++) {
				nnnumeric2 = nnnumeric2 + intNumeric2[i] * ((int) Math.pow(2, intNumeric2.length - 1 - i));
			}
			// System.out.println(binarNumeric2 + " -> " + nnnumeric2);
		} else {
			System.out.println("Введённое значение не является числом в бинарном формате");
		}
		/*
		 * считаем
		 */
		int maxLenght = Math.max(intNumeric1.length, intNumeric2.length);

		int[][] hemDiv = new int[3][maxLenght];

		for (int i = 0; i < intNumeric1.length; i++) {
			hemDiv[0][i + (maxLenght - intNumeric1.length)] = intNumeric1[i];
		}

		for (int i = 0; i < intNumeric2.length; i++) {
			hemDiv[1][i + (maxLenght - intNumeric2.length)] = intNumeric2[i];
		}

		for (int i = 0; i < maxLenght; i++) {
			if (hemDiv[0][i] != hemDiv[1][i]) {
				hemDiv[2][i] = 1;
			} else {
				hemDiv[2][i] = 0;
			}
		}

		System.out.println();

		for (int i = 0; i < hemDiv.length; i++) {
			System.out.println(Arrays.toString(hemDiv[i]));
		}

		int hemDist = 0;
		for (int i = 0; i < maxLenght; i++) {
			hemDist = hemDist + hemDiv[2][i];
		}

		System.out.println("Расстояние Хемминга между " + nnnumeric1 + " и " + nnnumeric2 + " равно " + hemDist);

	}

}
